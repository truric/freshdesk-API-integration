{
  "openapi": "3.0.0",
  "x-stoplight": {
    "id": "dg96rs65l7mrj"
  },
  "info": {
    "contact": {
      "email": "ricardo.parada@gsiportugal.com"
    },
    "title": "Feshdesk API implementation",
    "description": "This Swagger contract is a detailed description of an API that was created to integrate the Freshdesk ticket system with a customer support system. The API endpoints are designed to manage various aspects of the ticket system, such as creating new tickets, retrieving ticket information, updating ticket status, and managing ticket attachments.\n\nThe main purpose of this API is to provide an efficient and effective means of managing customer support tickets, with the aim of improving the overall customer support experience. By integrating the Freshdesk ticket system with the customer support system, it will be possible to provide timely and accurate support to customers, and to streamline the ticket management process.\n\nThe Swagger contract provides a comprehensive documentation of the API, including details on the available endpoints, request and response formats, error handling, and authentication requirements. This documentation will be essential for developers who are tasked with integrating the API into the customer support system, as well as for anyone who needs to understand the API functionality and capabilities.",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "ticket",
      "description": "Ticket endpoint",
      "externalDocs": {
        "description": "Freshdesk API documentation",
        "url": "https://developers.freshdesk.com/api/#tickets"
      }
    }
  ],
  "paths": {
    "/api/v2/tickets": {
      "parameters": [],
      "post": {
        "tags": [
          "ticket"
        ],
        "summary": "Create new Ticket",
        "operationId": "create-new-ticket",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "405": {
            "description": "Method Not Allowed"
          }
        },
        "description": "Create new Ticket.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ticket"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "ticket"
        ],
        "summary": "Get all Tickets",
        "operationId": "get-all-tickets",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "description": "Get all Tickets.",
        "parameters": []
      }
    },
    "/api/v2/tickets/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Unique Ticket identifier."
        }
      ],
      "get": {
        "summary": "Get Ticket by id",
        "tags": [
          "ticket"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "operationId": "get-ticket-id",
        "parameters": [],
        "description": "Get Ticket by id."
      },
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "Update Ticket",
        "operationId": "update-ticket",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "description": "Update Ticket.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "priority": 3,
                    "status": 3,
                    "subject": "Hello I'm a subject",
                    "product_id": null,
                    "type": null
                  }
                },
                "properties": {
                  "priority": {
                    "type": "integer"
                  },
                  "status": {
                    "type": "integer"
                  },
                  "subject": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "priority": 3,
                    "status": 3,
                    "subject": "Hello I'm a subject"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ticket"
        ],
        "summary": "Delete Ticket",
        "operationId": "delete-ticket",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "Delete Ticket."
      }
    },
    "/api/v2/tickets{page}": {
      "get": {
        "description": "Get Tickets with pagination",
        "summary": "Get Tickets with pagination",
        "tags": [
          "ticket"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "operationId": "get-tickets-with-pagination"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "page",
          "in": "path",
          "required": true,
          "description": "Page number to list Tickets"
        }
      ]
    },
    "/api/v2/search/tickets=\"{query}:{value}\"": {
      "get": {
        "summary": "Filter Tickets with query",
        "tags": [
          "ticket"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "operationId": "get-api-v2-search-tickets?query=-priority:3",
        "description": "Filter Tickets with query.",
        "parameters": [
          {
            "$ref": "#/components/parameters/TIcket-query-params"
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "query",
          "in": "path",
          "required": true,
          "description": "Query property from TicketFields"
        },
        {
          "schema": {
            "type": "integer"
          },
          "name": "value",
          "in": "path",
          "required": true,
          "description": "Value for query param"
        }
      ]
    },
    "/api/v2/tickets/{id}include=requester": {
      "get": {
        "summary": "Get Ticket with requester info",
        "tags": [
          "ticket"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "operationId": "get-ticket-with-requester-info",
        "description": "Get Ticket with requester info."
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Unique Ticket identifier."
        }
      ]
    },
    "/api/v2/tickets/{id}/summary": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Unique Ticket identifier."
        }
      ],
      "get": {
        "summary": "Get Ticket summary",
        "tags": [
          "ticket"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "operationId": "get-ticket-summry",
        "parameters": [],
        "description": "Get Ticket summary."
      }
    },
    "/api/v2/tickets/{id}/restore": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Unique Ticket identifier."
        }
      ],
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "Restore Ticket",
        "operationId": "restore-ticket",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "description": "Restore Ticket."
      }
    },
    "/api/v2/tickets/bulk_update": {
      "post": {
        "tags": [
          "ticket"
        ],
        "summary": "Update Tickets in bulk",
        "operationId": "update-tickets-in-bulk",
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "description": "Update Tickets in bulk.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketBulkUpdateResponse"
              }
            }
          },
          "description": ""
        }
      },
      "parameters": []
    },
    "/api/v2/tickets/bulk_delete": {
      "post": {
        "tags": [
          "ticket"
        ],
        "summary": "Delete Tickets in bulk",
        "operationId": "delete-tickets-in-bulk",
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "description": "Delete Tickets in bulk",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bulk_action": {
                    "type": "object",
                    "properties": {
                      "ids": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "x-examples": {
                  "Example 1": {
                    "bulk_action": {
                      "ids": [
                        112,
                        113,
                        114
                      ]
                    }
                  }
                }
              },
              "examples": {}
            }
          }
        }
      }
    },
    "/api/v2/ticket-forms": {
      "parameters": [],
      "post": {
        "tags": [
          "ticket"
        ],
        "summary": "Create new Ticket Form",
        "operationId": "create-new-ticket-form",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "405": {
            "description": "Method Not Allowed"
          }
        },
        "description": "Create new Ticket.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TicketForm"
              }
            }
          },
          "description": ""
        }
      },
      "get": {
        "tags": [
          "ticket"
        ],
        "summary": "Get all Ticket Forms",
        "operationId": "get-all-ticket-forms",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "description": "Get all Ticket Forms.",
        "parameters": []
      }
    },
    "/api/v2/ticket-forms/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Unique Ticket form identifier."
        }
      ],
      "get": {
        "summary": "Get Ticket form by id",
        "tags": [
          "ticket"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "operationId": "get-ticket-form-id",
        "parameters": [],
        "description": "Get Ticket form by id"
      },
      "put": {
        "tags": [
          "ticket"
        ],
        "summary": "Update Ticket Form",
        "operationId": "update-ticket-form",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "description": "Update Ticket.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {
                  "Example 1": {
                    "priority": 3,
                    "status": 3,
                    "subject": "Hello I'm a subject",
                    "product_id": null,
                    "type": null
                  }
                },
                "properties": {
                  "priority": {
                    "type": "integer"
                  },
                  "status": {
                    "type": "integer"
                  },
                  "subject": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "priority": 3,
                    "status": 3,
                    "subject": "Hello I'm a subject"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ticket"
        ],
        "summary": "Delete Ticket Form",
        "operationId": "delete-ticket-form",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "Delete Ticket."
      }
    },
    "/api/v2/ticket_fields": {
      "get": {
        "summary": "Get Ticket field list",
        "tags": [
          "ticket"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "operationId": "get-ticket-field-list",
        "description": "Get Ticket field list."
      }
    },
    "/api/v2/tickets/archived/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Unique Ticket identifier."
        }
      ],
      "get": {
        "summary": "Get Archived Ticket by id",
        "tags": [
          "ticket"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "operationId": "get-archived-ticket-id",
        "parameters": [],
        "description": "Get Archived Ticket by id."
      },
      "delete": {
        "tags": [
          "ticket"
        ],
        "summary": "Delete Archived Ticket",
        "operationId": "delete-archived-ticket",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "Delete Archived Ticket."
      }
    },
    "/api/v2/tickets/archived/{id}/conversations": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Unique Ticket identifier."
        }
      ],
      "get": {
        "summary": "Get all conversations of an Archive Ticket",
        "tags": [
          "ticket"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "operationId": "get-all-conversations-of-archive-ticket",
        "parameters": [],
        "description": "Get all conversations of an Archive Ticket."
      }
    }
  },
  "components": {
    "schemas": {
      "Ticket": {
        "type": "object",
        "x-stoplight": {
          "id": "9990ff562143d"
        },
        "properties": {
          "id": {
            "type": "number",
            "format": "double"
          },
          "phone": {
            "type": "string"
          },
          "source": {
            "type": "integer",
            "description": "Email: 1, Portal: 2, Phone: 3, hat: 7, Feedback Widget: , Outbound Email: 10"
          },
          "status": {
            "type": "integer",
            "description": "Open: 2, Pending: 3, Resolved: 4, Closed: 5"
          },
          "priority": {
            "type": "integer",
            "description": "Low: 1, Medium: 2, High: 3, Urgent: 4"
          },
          "subject": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "attachments": {
            "$ref": "#/components/schemas/TicketAttachment"
          }
        },
        "required": [
          "phone",
          "source",
          "status",
          "priority",
          "subject",
          "description",
          "name"
        ],
        "description": ""
      },
      "TicketAttachment": {
        "title": "TicketAttachment",
        "x-stoplight": {
          "id": "nntttfbwoe5mr"
        },
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "data": {
            "type": "string",
            "format": "byte"
          }
        },
        "required": [
          "name",
          "contentType",
          "data"
        ]
      },
      "TicketForm": {
        "title": "TicketForm",
        "x-stoplight": {
          "id": "3uzs0sq19tlnf"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "format": "double"
          },
          "title": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "portals": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "fields": {
            "$ref": "#/components/schemas/TicketFields"
          },
          "lastUpdatedBy": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TicketFields": {
        "title": "TicketFields",
        "x-stoplight": {
          "id": "d45xr99pb5508"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "format": "double"
          },
          "labelForCustomer": {
            "type": "string",
            "format": "double"
          },
          "customerCanEdit": {
            "type": "boolean",
            "format": "double"
          },
          "requiredForCustomers": {
            "type": "boolean",
            "format": "double"
          },
          "hintForCustomers": {
            "type": "string",
            "format": "double"
          },
          "placeholderForCustomers": {
            "type": "string",
            "format": "double"
          },
          "position": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "TicketBulkUpdateResponse": {
        "title": "TicketBulkUpdateResponse",
        "x-stoplight": {
          "id": "n1w0cbufrz17s"
        },
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "properties": {
            "type": "object"
          },
          "ticketReply": {
            "$ref": "#/components/schemas/TicketReply"
          }
        }
      },
      "TicketReply": {
        "title": "TicketReply",
        "x-stoplight": {
          "id": "r6hutiirjg8b1"
        },
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          }
        }
      },
      "TicketQueryDTO": {
        "title": "TicketQueryDTO",
        "x-stoplight": {
          "id": "089tv72cw8k5a"
        },
        "type": "object",
        "properties": {
          "agentId": {
            "type": "integer"
          },
          "groupId": {
            "type": "integer"
          },
          "priority": {
            "type": "integer"
          },
          "status": {
            "type": "integer"
          },
          "tag": {
            "type": "integer"
          },
          "type": {
            "type": "integer"
          },
          "agentId - copy": {
            "type": "string",
            "format": "date-time"
          },
          "frDueBy": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "parameters": {
      "TIcket-query-params": {
        "name": "queryParam",
        "in": "query",
        "schema": {
          "type": "string"
        },
        "description": "Query property from TicketQueryDTO"
      }
    }
  },
  "x-internal": false
}